{"version":3,"sources":["services/getGifsApi.js","components/Gif.js","components/ListOfGifs.js","App.js","reportWebVitals.js","index.js"],"names":["a","keyword","apiUrl","fetch","then","res","json","response","data","map","image","images","title","id","url","downsized_medium","getGifsApi","Gif","className","alt","src","ListOfGifs","useState","gifs","setGifs","useEffect","gif","console","log","App","setKeyword","type","onChange","e","target","value","placeholder","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mSACA,+BAAAA,EAAA,6DAA4BC,EAA5B,EAA4BA,QAClBC,EADV,0FACsGD,EADtG,+CAEiBE,MAAMD,GACdE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAOF,OANiBA,EAATC,KACUC,KAAI,SAAAC,GAClB,IAAQC,EAAsBD,EAAtBC,OAER,MAAO,CAAEC,MAFqBF,EAAdE,MAEAC,GAFcH,EAAPG,GAEHC,IADJH,EAAOI,iBAAfD,WARxB,oF,sBAeeE,M,2DCbA,SAASC,EAAT,GAA+C,EAAhCJ,GAAiC,IAAD,IAA5BD,aAA4B,MAApB,YAAoB,EAAPE,EAAO,EAAPA,IACnD,OACI,sBAAKI,UAAU,MAAf,UACI,6BAAKN,IACL,qBAAKM,UAAU,MAAMC,IAAKP,EAAOQ,IAAKN,OCHnC,SAASO,EAAT,GAAkC,IAAZpB,EAAW,EAAXA,QAEjC,EAAwBqB,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KASA,OAPAC,qBAAU,WACNT,EAAW,CAAEf,YAAWG,MAAK,SAAAsB,GACzBF,EAAQE,GACRC,QAAQC,IAAIF,QAEjB,CAACzB,IAEG,8BAECsB,EAAKd,KAAI,gBAAGI,EAAH,EAAGA,GAAID,EAAP,EAAOA,MAAOE,EAAd,EAAcA,IAAd,OACL,cAAC,EAAD,CAEIA,IAAKA,EACLF,MAAOA,EACPC,GAAIA,GAHCA,QCAVgB,MAff,WACE,MAA8BP,mBAAS,IAAvC,mBAAOrB,EAAP,KAAgB6B,EAAhB,KAEA,OACE,qBAAKZ,UAAU,MAAf,SACE,0BAASA,UAAU,cAAnB,UACE,kDACA,uBAAOa,KAAK,OAAOC,SAAU,SAAAC,GAAC,OAAIH,EAAWG,EAAEC,OAAOC,QAAQC,YAAY,sBAC1E,cAACf,EAAD,CAAYpB,QAASA,UCAdoC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnC,MAAK,YAAkD,IAA/CoC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.58030414.chunk.js","sourcesContent":["\r\nasync function getGifsApi({ keyword }) {\r\n    const apiUrl = `https://api.giphy.com/v1/gifs/search?api_key=8QUhiXcTvy6L9SOCtN9O6ZTp6wdSg6bZ&q=${keyword}&limit=5&offset=0&rating=g&lang=en`\r\n    return await fetch(apiUrl)\r\n        .then(res => res.json())\r\n        .then(response => {\r\n            const { data } = response\r\n            const gifs = data.map(image => {\r\n                const { images, title, id } = image;\r\n                const { url } = images.downsized_medium;\r\n                return { title, id, url }\r\n            })\r\n            return gifs;\r\n        })\r\n};\r\n\r\nexport default getGifsApi;\r\n\r\n","import React from 'react';\r\nimport './Gif.css';\r\n\r\nexport default function Gif({ id, title = \"Not title\", url }) {\r\n    return (\r\n        <div className=\"Gif\">\r\n            <h4>{title}</h4>\r\n            <img className=\"img\" alt={title} src={url} />\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport getGifsApi from '../services/getGifsApi'\r\nimport Gif from './Gif'\r\n\r\nexport default function ListOfGifs({ keyword }) {\r\n    // const { keyword } = params;\r\n    const [gifs, setGifs] = useState([])\r\n\r\n    useEffect(() => {\r\n        getGifsApi({ keyword }).then(gif => {\r\n            setGifs(gif)\r\n            console.log(gif);\r\n        })\r\n    }, [keyword])\r\n\r\n    return <div>\r\n        {\r\n            gifs.map(({ id, title, url }) =>\r\n                <Gif\r\n                    key={id}\r\n                    url={url}\r\n                    title={title}\r\n                    id={id}\r\n                />\r\n            )\r\n        }\r\n    </div>\r\n}","import React, { useState } from 'react'\nimport './App.css';\nimport ListOfGifs from './components/ListOfGifs'\n\nfunction App() {\n  const [keyword, setKeyword] = useState('')\n\n  return (\n    <div className=\"App\">\n      <section className=\"App-content\">\n        <h1>Five gifts of...</h1>\n        <input type=\"text\" onChange={e => setKeyword(e.target.value)} placeholder=\"Search your gifts\" />\n        <ListOfGifs keyword={keyword} />\n      </section>\n\n    </div >\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}